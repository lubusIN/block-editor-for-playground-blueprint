{"version":3,"file":"steps/enable-multisite/index.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACkD;AACF;AAChD,+BAA+B,sDAAI,CAAC,sDAAG;AACvC;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,iEAAe,SAAS,EAAC;AACzB;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACqC;AACQ;AACW;AACN;;AAElD;AACA;AACA;AACuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AALA;AAMe,SAASM,IAAIA,CAAA,EAAG;EAE9B,oBACCD,sDAAA;IAAA,GAAOH,sEAAa,CAAC,CAAC;IAAAK,QAAA,eACrBF,sDAAA,CAACF,8DAAW;MACXK,IAAI,EAAEP,wDAAU;MAChBQ,KAAK,EAAC,kBAAkB;MACxBC,YAAY,EAAC;IAA4B,CAAE;EAAC,CAC3C,CAAC;AAEN;;;;;;;;;;;AC7BA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA;AACA;AACA;AACsD;AACT;;AAE7C;AACA;AACA;AACoC;AACV;;AAE1B;AACA;AACA;AACAC,oEAAiB,CAACC,6CAAa,EAAE;EAChCJ,IAAI,EAAEP,wDAAS;EACfa,IAAI,EAAER,6CAAIA;AACX,CAAC,CAAC,C","sources":["webpack://block-editor-for-playground-blueprint/./node_modules/@wordpress/icons/build-module/library/block-meta.js","webpack://block-editor-for-playground-blueprint/./src/steps/enable-multisite/edit.js","webpack://block-editor-for-playground-blueprint/./src/steps/enable-multisite/editor.scss","webpack://block-editor-for-playground-blueprint/external window \"ReactJSXRuntime\"","webpack://block-editor-for-playground-blueprint/external window [\"wp\",\"blockEditor\"]","webpack://block-editor-for-playground-blueprint/external window [\"wp\",\"blocks\"]","webpack://block-editor-for-playground-blueprint/external window [\"wp\",\"components\"]","webpack://block-editor-for-playground-blueprint/external window [\"wp\",\"i18n\"]","webpack://block-editor-for-playground-blueprint/external window [\"wp\",\"primitives\"]","webpack://block-editor-for-playground-blueprint/webpack/bootstrap","webpack://block-editor-for-playground-blueprint/webpack/runtime/compat get default export","webpack://block-editor-for-playground-blueprint/webpack/runtime/define property getters","webpack://block-editor-for-playground-blueprint/webpack/runtime/hasOwnProperty shorthand","webpack://block-editor-for-playground-blueprint/webpack/runtime/make namespace object","webpack://block-editor-for-playground-blueprint/./src/steps/enable-multisite/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst blockMeta = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    fillRule: \"evenodd\",\n    d: \"M8.95 11.25H4v1.5h4.95v4.5H13V18c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2v-3c0-1.1-.9-2-2-2h-3c-1.1 0-2 .9-2 2v.75h-2.55v-7.5H13V9c0 1.1.9 2 2 2h3c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3c-1.1 0-2 .9-2 2v.75H8.95v4.5ZM14.5 15v3c0 .3.2.5.5.5h3c.3 0 .5-.2.5-.5v-3c0-.3-.2-.5-.5-.5h-3c-.3 0-.5.2-.5.5Zm0-6V6c0-.3.2-.5.5-.5h3c.3 0 .5.2.5.5v3c0 .3-.2.5-.5.5h-3c-.3 0-.5-.2-.5-.5Z\",\n    clipRule: \"evenodd\"\n  })\n});\nexport default blockMeta;\n//# sourceMappingURL=block-meta.js.map","/**\n * Wordpress dependencies.\n */\nimport { __ } from '@wordpress/i18n';\nimport { blockMeta } from '@wordpress/icons';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport {Placeholder} from '@wordpress/components';\n\n/**\n * Internal dependencies.\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @return {Element} Element to render.\n */\nexport default function Edit() {\n\n\treturn (\n\t\t<p {...useBlockProps()}>\n\t\t\t<Placeholder\n\t\t\t\ticon={blockMeta}\n\t\t\t\tlabel=\"Enable Multisite\"\n\t\t\t\tinstructions=\"Activate Multisite Network\" />\n\t\t</p>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Wordpress dependencies.\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { blockMeta } from '@wordpress/icons';\n\n/**\n * Internal dependencies.\n */\nimport metadata from './block.json';\nimport Edit from './edit';\n\n/**\n * Every block starts by registering a new block type definition.\n */\nregisterBlockType(metadata.name, {\n\ticon: blockMeta,\n\tedit: Edit,\n});\n"],"names":["__","blockMeta","useBlockProps","Placeholder","jsx","_jsx","Edit","children","icon","label","instructions","registerBlockType","metadata","name","edit"],"sourceRoot":""}